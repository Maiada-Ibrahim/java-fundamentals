/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;
import java.util.*;
public class Library {
    public boolean someLibraryMethod() {
        return true;
    }
    public static void main(String[] args) {
        int numroll = 6;
        ArrayList<Integer> usetocheck = roll(numroll);
        //second
        int[] array = {1, 3, 5, 7, 4};
        System.out.println(duplicates(array));
        //third
        int[] avrgarray = {1, 3, 5, 7, 4};
        System.out.println(averages(avrgarray));
        //four
        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        System.out.println(Arrays.toString(avarageoftwoarray(weeklyMonthTemperatures)));
        // lab2 first
        System.out.println(weather(weeklyMonthTemperatures));
        //lab2 sec
        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");
        System.out.println("winner is " + tally(votes));
    }

    public static ArrayList<Integer> roll(int n) {
        ArrayList<Integer> randomlist = new ArrayList<Integer>();

        for (int i = 0; i < n; i++) {
            int max = 6;
            int min = 1;
            int random = (int) (Math.random() * (max - min + 1) + min);
            randomlist.add(random);

        }
        System.out.println(randomlist);
        return randomlist;
    }

    public static boolean duplicates(int[] array) {
        boolean checkdup = false;
        for (int i = 0; i < array.length; i++) {
            for (int j = i + 1; j < array.length; j++) {
                if (array[i] == array[j]) {
                    checkdup = true;
                    break;
                }

            }
        }
        return checkdup;

    }


    public static double averages(int[] avrgarray) {
        double checkdup = 0;
        double sum = 0;
        double average = 0;
        for (int i = 0; i < avrgarray.length; i++) {

            sum = sum + avrgarray[i];
        }
        average = sum / avrgarray.length;
        System.out.println(sum);
        return average;
    }


    public static int[] avarageoftwoarray(int[][] array) {
        double sum = 0;
        int countlengh = 0;
        double lowestavarage = 0;
        double avg = 0;
        int indexforlowestavg = 0;
        for (int j : array[0]) {
            sum += j;
        }
        lowestavarage = sum / array[0].length;

        System.out.println(lowestavarage);


        for (int i = 0; i < array.length; i++) {
            for (int j : array[i]) {
                sum = sum + j;
                countlengh = countlengh + 1;
            }
            avg = sum / countlengh;
            System.out.println(avg);
            if (avg < lowestavarage) {
                lowestavarage = avg;
                indexforlowestavg = i;
            }
            ;
            countlengh = 0;
            sum = 0;

        }

        System.out.println(indexforlowestavg);

        return array[indexforlowestavg];
    }

    public static String weather(int[][] array) {
        HashSet<Integer> weatherlist = new HashSet<Integer>();
        int max = 0;
        int min = array[0][0];
        String output = "";
        for (int i = 0; i < array.length; i++) {
            for (int j = 0; j < array[i].length; j++) {
                int x = array[i][j];
                weatherlist.add(array[i][j]);
//                weatherlist.add(9);
                if (array[i][j] > max) {
                    max = array[i][j];
                } else if (array[i][j] < min) {
                    min = array[i][j];
                }
            }
        }
        System.out.println("High:" + max);
        System.out.println("Low:" + min);
        for (int i = min; i <= max; i++) {


            if (!weatherlist.contains(i)) {
                output += "\nNever saw temperature : " + i;
//                    break;
            }


        }
        return output;
    }

    public static String tally(List<String> votes) {
        HashMap<String, Integer> listvote = new HashMap<String, Integer>();
        int vote = 0;
        for (String thename : votes) {
            if (listvote.containsKey(thename)) {

                vote = listvote.get(thename) + 1;
                listvote.put(thename , vote);
            }else {
                listvote.put(thename,1);
            }


        }
        System.out.println(listvote);
        int max=0;
        String winner="";
        for(Map.Entry<String , Integer> entry : listvote.entrySet()){
            if (entry.getValue()>max){
                max=entry.getValue();
                winner=entry.getKey();

            }
        }
        return winner;
    }

}
